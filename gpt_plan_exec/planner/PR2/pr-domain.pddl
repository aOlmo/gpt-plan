(define
	(domain grounded-RADAR)
	(:requirements :strips :action-costs)
	(:predicates
		( ALERTED_APACHESTATION )
		( ALERTED_COURTSTATION )
		( ALERTED_SUBSTATION )
		( ALERTED_ADMINFIRE )
		( ALERTED_MESAFIRE )
		( ALERTED_SCOTTSFIRE )
		( ALERTED_PHXFIRE )
		( ALERTED_LUKES )
		( ALERTED_JOSEPH )
		( ALERTED_LAKE )
		( ALERTED_MILL )
		( ALERTED_MARKETPLACE )
		( ALERTED_RURAL )
		( ALERTED_BYENG )
		( UPDATED_POLICECHIEF )
		( UPDATED_FIRECHIEF )
		( UPDATED_MEDICHIEF )
		( UPDATED_TRANSPORTCHIEF )
		( DEPLOYED_POLICE_CARS_LAKE )
		( DEPLOYED_POLICE_CARS_MILL )
		( DEPLOYED_POLICE_CARS_MARKETPLACE )
		( DEPLOYED_POLICE_CARS_RURAL )
		( DEPLOYED_POLICE_CARS_BYENG )
		( DEPLOYED_ENGINES_LAKE )
		( DEPLOYED_SMALL_ENGINES_LAKE )
		( DEPLOYED_ENGINES_MILL )
		( DEPLOYED_SMALL_ENGINES_MILL )
		( DEPLOYED_ENGINES_MARKETPLACE )
		( DEPLOYED_SMALL_ENGINES_MARKETPLACE )
		( DEPLOYED_ENGINES_RURAL )
		( DEPLOYED_SMALL_ENGINES_RURAL )
		( DEPLOYED_ENGINES_BYENG )
		( DEPLOYED_SMALL_ENGINES_BYENG )
		( DEPLOYED_BIG_ENGINES_LAKE )
		( DEPLOYED_BIG_ENGINES_MILL )
		( DEPLOYED_BIG_ENGINES_MARKETPLACE )
		( DEPLOYED_BIG_ENGINES_RURAL )
		( DEPLOYED_BIG_ENGINES_BYENG )
		( DEPLOYED_LADDERS_LAKE )
		( DEPLOYED_LADDERS_MILL )
		( DEPLOYED_LADDERS_MARKETPLACE )
		( DEPLOYED_LADDERS_RURAL )
		( DEPLOYED_LADDERS_BYENG )
		( DEPLOYED_BULLDOZERS_LAKE )
		( DEPLOYED_BULLDOZERS_MILL )
		( DEPLOYED_BULLDOZERS_MARKETPLACE )
		( DEPLOYED_BULLDOZERS_RURAL )
		( DEPLOYED_BULLDOZERS_BYENG )
		( DEPLOYED_HELICOPTERS_LAKE )
		( DEPLOYED_HELICOPTERS_MILL )
		( DEPLOYED_HELICOPTERS_MARKETPLACE )
		( DEPLOYED_HELICOPTERS_RURAL )
		( DEPLOYED_HELICOPTERS_BYENG )
		( DEPLOYED_RESCUERS_LAKE )
		( DEPLOYED_RESCUERS_MILL )
		( DEPLOYED_RESCUERS_MARKETPLACE )
		( DEPLOYED_RESCUERS_RURAL )
		( DEPLOYED_RESCUERS_BYENG )
		( DEPLOYED_AMBULANCES_LAKE )
		( DEPLOYED_AMBULANCES_MILL )
		( DEPLOYED_AMBULANCES_MARKETPLACE )
		( DEPLOYED_AMBULANCES_RURAL )
		( DEPLOYED_AMBULANCES_BYENG )
		( POSITIONED_POLICEMEN_LAKE )
		( POSITIONED_POLICEMEN_MILL )
		( POSITIONED_POLICEMEN_MARKETPLACE )
		( POSITIONED_POLICEMEN_RURAL )
		( POSITIONED_POLICEMEN_BYENG )
		( MEDIA_CONTACTED_POLICECHIEF )
		( MEDIA_CONTACTED_FIRECHIEF )
		( MEDIA_CONTACTED_MEDICHIEF )
		( MEDIA_CONTACTED_TRANSPORTCHIEF )
		( ACTIVE_HELPLINE_POLICECHIEF )
		( ACTIVE_HELPLINE_FIRECHIEF )
		( ACTIVE_HELPLINE_MEDICHIEF )
		( ACTIVE_HELPLINE_TRANSPORTCHIEF )
		( ACTIVE_LOCAL_ALERT_POLICECHIEF )
		( ACTIVE_LOCAL_ALERT_FIRECHIEF )
		( ACTIVE_LOCAL_ALERT_MEDICHIEF )
		( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		( BLOCKED_ROAD_LAKE_LAKE )
		( NEEDED_DIVERTED_TRAFFIC_LAKE_LAKE )
		( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		( BLOCKED_ROAD_LAKE_MILL )
		( NEEDED_DIVERTED_TRAFFIC_LAKE_MILL )
		( BLOCKED_ROAD_LAKE_MARKETPLACE )
		( NEEDED_DIVERTED_TRAFFIC_LAKE_MARKETPLACE )
		( BLOCKED_ROAD_LAKE_RURAL )
		( NEEDED_DIVERTED_TRAFFIC_LAKE_RURAL )
		( BLOCKED_ROAD_LAKE_BYENG )
		( NEEDED_DIVERTED_TRAFFIC_LAKE_BYENG )
		( BLOCKED_ROAD_MILL_LAKE )
		( NEEDED_DIVERTED_TRAFFIC_MILL_LAKE )
		( BLOCKED_ROAD_MILL_MILL )
		( NEEDED_DIVERTED_TRAFFIC_MILL_MILL )
		( BLOCKED_ROAD_MILL_MARKETPLACE )
		( NEEDED_DIVERTED_TRAFFIC_MILL_MARKETPLACE )
		( BLOCKED_ROAD_MILL_RURAL )
		( NEEDED_DIVERTED_TRAFFIC_MILL_RURAL )
		( BLOCKED_ROAD_MILL_BYENG )
		( NEEDED_DIVERTED_TRAFFIC_MILL_BYENG )
		( BLOCKED_ROAD_MARKETPLACE_LAKE )
		( NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_LAKE )
		( BLOCKED_ROAD_MARKETPLACE_MILL )
		( NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_MILL )
		( BLOCKED_ROAD_MARKETPLACE_MARKETPLACE )
		( NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_MARKETPLACE )
		( BLOCKED_ROAD_MARKETPLACE_RURAL )
		( NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_RURAL )
		( BLOCKED_ROAD_MARKETPLACE_BYENG )
		( NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_BYENG )
		( BLOCKED_ROAD_RURAL_LAKE )
		( NEEDED_DIVERTED_TRAFFIC_RURAL_LAKE )
		( BLOCKED_ROAD_RURAL_MILL )
		( NEEDED_DIVERTED_TRAFFIC_RURAL_MILL )
		( BLOCKED_ROAD_RURAL_MARKETPLACE )
		( NEEDED_DIVERTED_TRAFFIC_RURAL_MARKETPLACE )
		( BLOCKED_ROAD_RURAL_RURAL )
		( NEEDED_DIVERTED_TRAFFIC_RURAL_RURAL )
		( BLOCKED_ROAD_RURAL_BYENG )
		( NEEDED_DIVERTED_TRAFFIC_RURAL_BYENG )
		( BLOCKED_ROAD_BYENG_LAKE )
		( NEEDED_DIVERTED_TRAFFIC_BYENG_LAKE )
		( BLOCKED_ROAD_BYENG_MILL )
		( NEEDED_DIVERTED_TRAFFIC_BYENG_MILL )
		( BLOCKED_ROAD_BYENG_MARKETPLACE )
		( NEEDED_DIVERTED_TRAFFIC_BYENG_MARKETPLACE )
		( BLOCKED_ROAD_BYENG_RURAL )
		( NEEDED_DIVERTED_TRAFFIC_BYENG_RURAL )
		( BLOCKED_ROAD_BYENG_BYENG )
		( NEEDED_DIVERTED_TRAFFIC_BYENG_BYENG )
		( TRAFFIC_DIVERTED_LAKE_LAKE )
		( TRAFFIC_DIVERTED_LAKE_MILL )
		( TRAFFIC_DIVERTED_LAKE_MARKETPLACE )
		( TRAFFIC_DIVERTED_LAKE_RURAL )
		( TRAFFIC_DIVERTED_LAKE_BYENG )
		( TRAFFIC_DIVERTED_MILL_LAKE )
		( TRAFFIC_DIVERTED_MILL_MILL )
		( TRAFFIC_DIVERTED_MILL_MARKETPLACE )
		( TRAFFIC_DIVERTED_MILL_RURAL )
		( TRAFFIC_DIVERTED_MILL_BYENG )
		( TRAFFIC_DIVERTED_MARKETPLACE_LAKE )
		( TRAFFIC_DIVERTED_MARKETPLACE_MILL )
		( TRAFFIC_DIVERTED_MARKETPLACE_MARKETPLACE )
		( TRAFFIC_DIVERTED_MARKETPLACE_RURAL )
		( TRAFFIC_DIVERTED_MARKETPLACE_BYENG )
		( TRAFFIC_DIVERTED_RURAL_LAKE )
		( TRAFFIC_DIVERTED_RURAL_MILL )
		( TRAFFIC_DIVERTED_RURAL_MARKETPLACE )
		( TRAFFIC_DIVERTED_RURAL_RURAL )
		( TRAFFIC_DIVERTED_RURAL_BYENG )
		( TRAFFIC_DIVERTED_BYENG_LAKE )
		( TRAFFIC_DIVERTED_BYENG_MILL )
		( TRAFFIC_DIVERTED_BYENG_MARKETPLACE )
		( TRAFFIC_DIVERTED_BYENG_RURAL )
		( TRAFFIC_DIVERTED_BYENG_BYENG )
		( PREPARED_EVACUATION_APACHESTATION )
		( PREPARED_EVACUATION_COURTSTATION )
		( PREPARED_EVACUATION_SUBSTATION )
		( PREPARED_EVACUATION_ADMINFIRE )
		( PREPARED_EVACUATION_MESAFIRE )
		( PREPARED_EVACUATION_SCOTTSFIRE )
		( PREPARED_EVACUATION_PHXFIRE )
		( PREPARED_EVACUATION_LUKES )
		( PREPARED_EVACUATION_JOSEPH )
		( PREPARED_EVACUATION_LAKE )
		( PREPARED_EVACUATION_MILL )
		( PREPARED_EVACUATION_MARKETPLACE )
		( PREPARED_EVACUATION_RURAL )
		( PREPARED_EVACUATION_BYENG )
		( EVACUATED_LAKE_LAKE )
		( EVACUATED_LAKE_MILL )
		( EVACUATED_LAKE_MARKETPLACE )
		( EVACUATED_LAKE_RURAL )
		( EVACUATED_LAKE_BYENG )
		( EVACUATED_MILL_LAKE )
		( EVACUATED_MILL_MILL )
		( EVACUATED_MILL_MARKETPLACE )
		( EVACUATED_MILL_RURAL )
		( EVACUATED_MILL_BYENG )
		( EVACUATED_MARKETPLACE_LAKE )
		( EVACUATED_MARKETPLACE_MILL )
		( EVACUATED_MARKETPLACE_MARKETPLACE )
		( EVACUATED_MARKETPLACE_RURAL )
		( EVACUATED_MARKETPLACE_BYENG )
		( EVACUATED_RURAL_LAKE )
		( EVACUATED_RURAL_MILL )
		( EVACUATED_RURAL_MARKETPLACE )
		( EVACUATED_RURAL_RURAL )
		( EVACUATED_RURAL_BYENG )
		( EVACUATED_BYENG_LAKE )
		( EVACUATED_BYENG_MILL )
		( EVACUATED_BYENG_MARKETPLACE )
		( EVACUATED_BYENG_RURAL )
		( EVACUATED_BYENG_BYENG )
		( EXTINGUISHED_FIRE_BYENG )
		( NEEDED_SEARCH_CASUALTIES_BYENG )
		( BARRICADED_LAKE )
		( NEEDED_ACTIVE_LOCAL_ALERT_FIRECHIEF )
		( NOT_NEEDED_BARRICADE_LAKE )
		( BARRICADED_MILL )
		( NOT_NEEDED_BARRICADE_MILL )
		( BARRICADED_MARKETPLACE )
		( NOT_NEEDED_BARRICADE_MARKETPLACE )
		( BARRICADED_RURAL )
		( NOT_NEEDED_BARRICADE_RURAL )
		( BARRICADED_BYENG )
		( NOT_NEEDED_BARRICADE_BYENG )
		( SEARCHED_BYENG )
		( NEEDED_ATTEND_CASUALTIES_BYENG )
		( NEEDED_ADDRESS_MEDIA )
		( ATTENDED_CASUALTIES_BYENG )
		( ADDRESSED_MEDIA )
		( SENT_SOCIAL_MEDIA_LAKE )
		( SENT_SOCIAL_MEDIA_MILL )
		( SENT_SOCIAL_MEDIA_MARKETPLACE )
		( SENT_SOCIAL_MEDIA_RURAL )
		( SENT_SOCIAL_MEDIA_BYENG )
		( NOT_NEEDED_ADDRESS_MEDIA )
		( NO_MEDIA_ADDRESSED )
		( NOT_NEEDED_ATTEND_CASUALTIES_BYENG )
		( NOT_NEEDED_ACTIVE_LOCAL_ALERT_FIRECHIEF )
		( FIRE_AT_BYENG )
		( NOT_NEEDED_SEARCH_CASUALTIES_BYENG )
		( NOT_NEEDED_DIVERTED_TRAFFIC_BYENG_BYENG )
		( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		( NOT_NEEDED_DIVERTED_TRAFFIC_BYENG_RURAL )
		( NOT_NEEDED_DIVERTED_TRAFFIC_BYENG_MARKETPLACE )
		( NOT_NEEDED_DIVERTED_TRAFFIC_BYENG_MILL )
		( NOT_NEEDED_DIVERTED_TRAFFIC_BYENG_LAKE )
		( NOT_NEEDED_DIVERTED_TRAFFIC_RURAL_BYENG )
		( NOT_NEEDED_DIVERTED_TRAFFIC_RURAL_RURAL )
		( NOT_NEEDED_DIVERTED_TRAFFIC_RURAL_MARKETPLACE )
		( NOT_NEEDED_DIVERTED_TRAFFIC_RURAL_MILL )
		( NOT_NEEDED_DIVERTED_TRAFFIC_RURAL_LAKE )
		( NOT_NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_BYENG )
		( NOT_NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_RURAL )
		( NOT_NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_MARKETPLACE )
		( NOT_NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_MILL )
		( NOT_NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_LAKE )
		( NOT_NEEDED_DIVERTED_TRAFFIC_MILL_BYENG )
		( NOT_NEEDED_DIVERTED_TRAFFIC_MILL_RURAL )
		( NOT_NEEDED_DIVERTED_TRAFFIC_MILL_MARKETPLACE )
		( NOT_NEEDED_DIVERTED_TRAFFIC_MILL_MILL )
		( NOT_NEEDED_DIVERTED_TRAFFIC_MILL_LAKE )
		( NOT_NEEDED_DIVERTED_TRAFFIC_LAKE_BYENG )
		( NOT_NEEDED_DIVERTED_TRAFFIC_LAKE_RURAL )
		( NOT_NEEDED_DIVERTED_TRAFFIC_LAKE_MARKETPLACE )
		( NOT_NEEDED_DIVERTED_TRAFFIC_LAKE_MILL )
		( NOT_NEEDED_DIVERTED_TRAFFIC_LAKE_LAKE )
		( HAS_AMBULANCES_NUMBER_JOSEPH )
		( HAS_AMBULANCES_NUMBER_LUKES )
		( HAS_RESCUERS_NUMBER_PHXFIRE )
		( HAS_RESCUERS_NUMBER_SCOTTSFIRE )
		( HAS_RESCUERS_NUMBER_MESAFIRE )
		( HAS_RESCUERS_NUMBER_ADMINFIRE )
		( HAS_HELICOPTERS_NUMBER_PHXFIRE )
		( HAS_HELICOPTERS_NUMBER_ADMINFIRE )
		( HAS_BULLDOZERS_NUMBER_PHXFIRE )
		( HAS_BULLDOZERS_NUMBER_SCOTTSFIRE )
		( HAS_BULLDOZERS_NUMBER_ADMINFIRE )
		( HAS_LADDERS_NUMBER_PHXFIRE )
		( HAS_LADDERS_NUMBER_SCOTTSFIRE )
		( HAS_LADDERS_NUMBER_MESAFIRE )
		( HAS_LADDERS_NUMBER_ADMINFIRE )
		( HAS_BIG_ENGINES_NUMBER_MESAFIRE )
		( HAS_SMALL_ENGINES_NUMBER_SCOTTSFIRE )
		( HAS_SMALL_ENGINES_NUMBER_ADMINFIRE )
		( HAS_POLICE_CAR_NUMBER_SUBSTATION )
		( HAS_POLICE_CAR_NUMBER_COURTSTATION )
		( HAS_POLICE_CAR_NUMBER_APACHESTATION )
		( EXPLAINED_FULL_OBS_SEQUENCE )
		( NOT_EXPLAINED_FULL_OBS_SEQUENCE )
	) 
	(:functions (total-cost))
	(:action SEND_SOCIAL_MEDIA_BYENG_BYENG
		:parameters ()
		:precondition
		(and
			( NEEDED_ADDRESS_MEDIA )
			( SEARCHED_BYENG )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( SENT_SOCIAL_MEDIA_BYENG )
			( ADDRESSED_MEDIA )
			( NOT_NEEDED_ADDRESS_MEDIA )
			(not ( NEEDED_ADDRESS_MEDIA ))
		)
	)
	(:action SEND_SOCIAL_MEDIA_RURAL_BYENG
		:parameters ()
		:precondition
		(and
			( NEEDED_ADDRESS_MEDIA )
			( SEARCHED_BYENG )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( SENT_SOCIAL_MEDIA_RURAL )
			( ADDRESSED_MEDIA )
			( NOT_NEEDED_ADDRESS_MEDIA )
			(not ( NEEDED_ADDRESS_MEDIA ))
		)
	)
	(:action SEND_SOCIAL_MEDIA_MARKETPLACE_BYENG
		:parameters ()
		:precondition
		(and
			( NEEDED_ADDRESS_MEDIA )
			( SEARCHED_BYENG )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( SENT_SOCIAL_MEDIA_MARKETPLACE )
			( ADDRESSED_MEDIA )
			( NOT_NEEDED_ADDRESS_MEDIA )
			(not ( NEEDED_ADDRESS_MEDIA ))
		)
	)
	(:action SEND_SOCIAL_MEDIA_MILL_BYENG
		:parameters ()
		:precondition
		(and
			( NEEDED_ADDRESS_MEDIA )
			( SEARCHED_BYENG )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( SENT_SOCIAL_MEDIA_MILL )
			( ADDRESSED_MEDIA )
			( NOT_NEEDED_ADDRESS_MEDIA )
			(not ( NEEDED_ADDRESS_MEDIA ))
		)
	)
	(:action SEND_SOCIAL_MEDIA_LAKE_BYENG
		:parameters ()
		:precondition
		(and
			( NEEDED_ADDRESS_MEDIA )
			( SEARCHED_BYENG )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( SENT_SOCIAL_MEDIA_LAKE )
			( ADDRESSED_MEDIA )
			( NOT_NEEDED_ADDRESS_MEDIA )
			(not ( NEEDED_ADDRESS_MEDIA ))
		)
	)
	(:action ADDRESS_MEDIA_TRANSPORTCHIEF
		:parameters ()
		:precondition
		(and
			( NO_MEDIA_ADDRESSED )
			( NEEDED_ADDRESS_MEDIA )
			( MEDIA_CONTACTED_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( ADDRESSED_MEDIA )
			( NOT_NEEDED_ADDRESS_MEDIA )
			(not ( NEEDED_ADDRESS_MEDIA ))
		)
	)
	(:action ADDRESS_MEDIA_MEDICHIEF
		:parameters ()
		:precondition
		(and
			( NO_MEDIA_ADDRESSED )
			( NEEDED_ADDRESS_MEDIA )
			( MEDIA_CONTACTED_MEDICHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( ADDRESSED_MEDIA )
			( NOT_NEEDED_ADDRESS_MEDIA )
			(not ( NEEDED_ADDRESS_MEDIA ))
		)
	)
	(:action ADDRESS_MEDIA_FIRECHIEF
		:parameters ()
		:precondition
		(and
			( NO_MEDIA_ADDRESSED )
			( NEEDED_ADDRESS_MEDIA )
			( MEDIA_CONTACTED_FIRECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( ADDRESSED_MEDIA )
			( NOT_NEEDED_ADDRESS_MEDIA )
			(not ( NEEDED_ADDRESS_MEDIA ))
		)
	)
	(:action ADDRESS_MEDIA_POLICECHIEF
		:parameters ()
		:precondition
		(and
			( NO_MEDIA_ADDRESSED )
			( NEEDED_ADDRESS_MEDIA )
			( MEDIA_CONTACTED_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( ADDRESSED_MEDIA )
			( NOT_NEEDED_ADDRESS_MEDIA )
			(not ( NEEDED_ADDRESS_MEDIA ))
		)
	)
	(:action ATTEND_CASUALTIES_MEDICHIEF_BYENG
		:parameters ()
		:precondition
		(and
			( DEPLOYED_AMBULANCES_BYENG )
			( NEEDED_ATTEND_CASUALTIES_BYENG )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( ATTENDED_CASUALTIES_BYENG )
			( NOT_NEEDED_ATTEND_CASUALTIES_BYENG )
			( NEEDED_ADDRESS_MEDIA )
			(not ( NEEDED_ATTEND_CASUALTIES_BYENG ))
			(not ( NOT_NEEDED_ADDRESS_MEDIA ))
			(not ( NO_MEDIA_ADDRESSED ))
		)
	)
	(:action SEARCH_CASUALTIES_FIRECHIEF_BYENG
		:parameters ()
		:precondition
		(and
			( DEPLOYED_RESCUERS_BYENG )
			( DEPLOYED_HELICOPTERS_BYENG )
			( DEPLOYED_BULLDOZERS_BYENG )
			( EXTINGUISHED_FIRE_BYENG )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( SEARCHED_BYENG )
			( NEEDED_ATTEND_CASUALTIES_BYENG )
			( NEEDED_ADDRESS_MEDIA )
			(not ( NOT_NEEDED_ATTEND_CASUALTIES_BYENG ))
			(not ( NOT_NEEDED_ADDRESS_MEDIA ))
		)
	)
	(:action BARRICADE_FIRECHIEF_BYENG
		:parameters ()
		:precondition
		(and
			( DEPLOYED_ENGINES_BYENG )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( BARRICADED_BYENG )
			( NEEDED_ACTIVE_LOCAL_ALERT_FIRECHIEF )
			( NOT_NEEDED_BARRICADE_BYENG )
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_FIRECHIEF ))
		)
	)
	(:action BARRICADE_FIRECHIEF_RURAL
		:parameters ()
		:precondition
		(and
			( DEPLOYED_ENGINES_RURAL )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( BARRICADED_RURAL )
			( NEEDED_ACTIVE_LOCAL_ALERT_FIRECHIEF )
			( NOT_NEEDED_BARRICADE_RURAL )
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_FIRECHIEF ))
		)
	)
	(:action BARRICADE_FIRECHIEF_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( DEPLOYED_ENGINES_MARKETPLACE )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( BARRICADED_MARKETPLACE )
			( NEEDED_ACTIVE_LOCAL_ALERT_FIRECHIEF )
			( NOT_NEEDED_BARRICADE_MARKETPLACE )
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_FIRECHIEF ))
		)
	)
	(:action BARRICADE_FIRECHIEF_MILL
		:parameters ()
		:precondition
		(and
			( DEPLOYED_ENGINES_MILL )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( BARRICADED_MILL )
			( NEEDED_ACTIVE_LOCAL_ALERT_FIRECHIEF )
			( NOT_NEEDED_BARRICADE_MILL )
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_FIRECHIEF ))
		)
	)
	(:action BARRICADE_FIRECHIEF_LAKE
		:parameters ()
		:precondition
		(and
			( DEPLOYED_ENGINES_LAKE )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( BARRICADED_LAKE )
			( NEEDED_ACTIVE_LOCAL_ALERT_FIRECHIEF )
			( NOT_NEEDED_BARRICADE_LAKE )
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_FIRECHIEF ))
		)
	)
	(:action EXTINGUISH_BIG_FIRE_FIRECHIEF_BYENG
		:parameters ()
		:precondition
		(and
			( DEPLOYED_BIG_ENGINES_BYENG )
			( FIRE_AT_BYENG )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( EXTINGUISHED_FIRE_BYENG )
			( NEEDED_SEARCH_CASUALTIES_BYENG )
			(not ( FIRE_AT_BYENG ))
			(not ( NOT_NEEDED_SEARCH_CASUALTIES_BYENG ))
		)
	)
	(:action EVACUATE_POLICECHIEF_BYENG_BYENG
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_BYENG_BYENG )
			( DEPLOYED_POLICE_CARS_BYENG )
			( POSITIONED_POLICEMEN_BYENG )
			( PREPARED_EVACUATION_BYENG )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_BYENG_BYENG )
		)
	)
	(:action EVACUATE_POLICECHIEF_BYENG_RURAL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_BYENG_RURAL )
			( DEPLOYED_POLICE_CARS_BYENG )
			( POSITIONED_POLICEMEN_BYENG )
			( PREPARED_EVACUATION_BYENG )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_BYENG_RURAL )
		)
	)
	(:action EVACUATE_POLICECHIEF_BYENG_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_BYENG_MARKETPLACE )
			( DEPLOYED_POLICE_CARS_BYENG )
			( POSITIONED_POLICEMEN_BYENG )
			( PREPARED_EVACUATION_BYENG )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_BYENG_MARKETPLACE )
		)
	)
	(:action EVACUATE_POLICECHIEF_BYENG_MILL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_BYENG_MILL )
			( DEPLOYED_POLICE_CARS_BYENG )
			( POSITIONED_POLICEMEN_BYENG )
			( PREPARED_EVACUATION_BYENG )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_BYENG_MILL )
		)
	)
	(:action EVACUATE_POLICECHIEF_BYENG_LAKE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_BYENG_LAKE )
			( DEPLOYED_POLICE_CARS_BYENG )
			( POSITIONED_POLICEMEN_BYENG )
			( PREPARED_EVACUATION_BYENG )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_BYENG_LAKE )
		)
	)
	(:action EVACUATE_POLICECHIEF_RURAL_BYENG
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_RURAL_BYENG )
			( DEPLOYED_POLICE_CARS_RURAL )
			( POSITIONED_POLICEMEN_RURAL )
			( PREPARED_EVACUATION_RURAL )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_RURAL_BYENG )
		)
	)
	(:action EVACUATE_POLICECHIEF_RURAL_RURAL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_RURAL_RURAL )
			( DEPLOYED_POLICE_CARS_RURAL )
			( POSITIONED_POLICEMEN_RURAL )
			( PREPARED_EVACUATION_RURAL )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_RURAL_RURAL )
		)
	)
	(:action EVACUATE_POLICECHIEF_RURAL_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_RURAL_MARKETPLACE )
			( DEPLOYED_POLICE_CARS_RURAL )
			( POSITIONED_POLICEMEN_RURAL )
			( PREPARED_EVACUATION_RURAL )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_RURAL_MARKETPLACE )
		)
	)
	(:action EVACUATE_POLICECHIEF_RURAL_MILL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_RURAL_MILL )
			( DEPLOYED_POLICE_CARS_RURAL )
			( POSITIONED_POLICEMEN_RURAL )
			( PREPARED_EVACUATION_RURAL )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_RURAL_MILL )
		)
	)
	(:action EVACUATE_POLICECHIEF_RURAL_LAKE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_RURAL_LAKE )
			( DEPLOYED_POLICE_CARS_RURAL )
			( POSITIONED_POLICEMEN_RURAL )
			( PREPARED_EVACUATION_RURAL )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_RURAL_LAKE )
		)
	)
	(:action EVACUATE_POLICECHIEF_MARKETPLACE_BYENG
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MARKETPLACE_BYENG )
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			( POSITIONED_POLICEMEN_MARKETPLACE )
			( PREPARED_EVACUATION_MARKETPLACE )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_MARKETPLACE_BYENG )
		)
	)
	(:action EVACUATE_POLICECHIEF_MARKETPLACE_RURAL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MARKETPLACE_RURAL )
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			( POSITIONED_POLICEMEN_MARKETPLACE )
			( PREPARED_EVACUATION_MARKETPLACE )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_MARKETPLACE_RURAL )
		)
	)
	(:action EVACUATE_POLICECHIEF_MARKETPLACE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MARKETPLACE_MARKETPLACE )
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			( POSITIONED_POLICEMEN_MARKETPLACE )
			( PREPARED_EVACUATION_MARKETPLACE )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_MARKETPLACE_MARKETPLACE )
		)
	)
	(:action EVACUATE_POLICECHIEF_MARKETPLACE_MILL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MARKETPLACE_MILL )
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			( POSITIONED_POLICEMEN_MARKETPLACE )
			( PREPARED_EVACUATION_MARKETPLACE )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_MARKETPLACE_MILL )
		)
	)
	(:action EVACUATE_POLICECHIEF_MARKETPLACE_LAKE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MARKETPLACE_LAKE )
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			( POSITIONED_POLICEMEN_MARKETPLACE )
			( PREPARED_EVACUATION_MARKETPLACE )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_MARKETPLACE_LAKE )
		)
	)
	(:action EVACUATE_POLICECHIEF_MILL_BYENG
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MILL_BYENG )
			( DEPLOYED_POLICE_CARS_MILL )
			( POSITIONED_POLICEMEN_MILL )
			( PREPARED_EVACUATION_MILL )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_MILL_BYENG )
		)
	)
	(:action EVACUATE_POLICECHIEF_MILL_RURAL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MILL_RURAL )
			( DEPLOYED_POLICE_CARS_MILL )
			( POSITIONED_POLICEMEN_MILL )
			( PREPARED_EVACUATION_MILL )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_MILL_RURAL )
		)
	)
	(:action EVACUATE_POLICECHIEF_MILL_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MILL_MARKETPLACE )
			( DEPLOYED_POLICE_CARS_MILL )
			( POSITIONED_POLICEMEN_MILL )
			( PREPARED_EVACUATION_MILL )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_MILL_MARKETPLACE )
		)
	)
	(:action EVACUATE_POLICECHIEF_MILL_MILL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MILL_MILL )
			( DEPLOYED_POLICE_CARS_MILL )
			( POSITIONED_POLICEMEN_MILL )
			( PREPARED_EVACUATION_MILL )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_MILL_MILL )
		)
	)
	(:action EVACUATE_POLICECHIEF_MILL_LAKE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MILL_LAKE )
			( DEPLOYED_POLICE_CARS_MILL )
			( POSITIONED_POLICEMEN_MILL )
			( PREPARED_EVACUATION_MILL )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_MILL_LAKE )
		)
	)
	(:action EVACUATE_POLICECHIEF_LAKE_BYENG
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_LAKE_BYENG )
			( DEPLOYED_POLICE_CARS_LAKE )
			( POSITIONED_POLICEMEN_LAKE )
			( PREPARED_EVACUATION_LAKE )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_LAKE_BYENG )
		)
	)
	(:action EVACUATE_POLICECHIEF_LAKE_RURAL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_LAKE_RURAL )
			( DEPLOYED_POLICE_CARS_LAKE )
			( POSITIONED_POLICEMEN_LAKE )
			( PREPARED_EVACUATION_LAKE )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_LAKE_RURAL )
		)
	)
	(:action EVACUATE_POLICECHIEF_LAKE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_LAKE_MARKETPLACE )
			( DEPLOYED_POLICE_CARS_LAKE )
			( POSITIONED_POLICEMEN_LAKE )
			( PREPARED_EVACUATION_LAKE )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_LAKE_MARKETPLACE )
		)
	)
	(:action EVACUATE_POLICECHIEF_LAKE_MILL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_LAKE_MILL )
			( DEPLOYED_POLICE_CARS_LAKE )
			( POSITIONED_POLICEMEN_LAKE )
			( PREPARED_EVACUATION_LAKE )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_LAKE_MILL )
		)
	)
	(:action EVACUATE_POLICECHIEF_LAKE_LAKE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_LAKE_LAKE )
			( DEPLOYED_POLICE_CARS_LAKE )
			( POSITIONED_POLICEMEN_LAKE )
			( PREPARED_EVACUATION_LAKE )
		)
		:effect
		(and
			(increase (total-cost) 5)
			( EVACUATED_LAKE_LAKE )
		)
	)
	(:action PREPARE_EVACUATION_POLICECHIEF_BYENG
		:parameters ()
		:precondition
		(and
			( ACTIVE_LOCAL_ALERT_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( PREPARED_EVACUATION_BYENG )
		)
	)
	(:action PREPARE_EVACUATION_POLICECHIEF_RURAL
		:parameters ()
		:precondition
		(and
			( ACTIVE_LOCAL_ALERT_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( PREPARED_EVACUATION_RURAL )
		)
	)
	(:action PREPARE_EVACUATION_POLICECHIEF_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( ACTIVE_LOCAL_ALERT_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( PREPARED_EVACUATION_MARKETPLACE )
		)
	)
	(:action PREPARE_EVACUATION_POLICECHIEF_MILL
		:parameters ()
		:precondition
		(and
			( ACTIVE_LOCAL_ALERT_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( PREPARED_EVACUATION_MILL )
		)
	)
	(:action PREPARE_EVACUATION_POLICECHIEF_LAKE
		:parameters ()
		:precondition
		(and
			( ACTIVE_LOCAL_ALERT_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( PREPARED_EVACUATION_LAKE )
		)
	)
	(:action PREPARE_EVACUATION_POLICECHIEF_JOSEPH
		:parameters ()
		:precondition
		(and
			( ACTIVE_LOCAL_ALERT_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( PREPARED_EVACUATION_JOSEPH )
		)
	)
	(:action PREPARE_EVACUATION_POLICECHIEF_LUKES
		:parameters ()
		:precondition
		(and
			( ACTIVE_LOCAL_ALERT_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( PREPARED_EVACUATION_LUKES )
		)
	)
	(:action PREPARE_EVACUATION_POLICECHIEF_PHXFIRE
		:parameters ()
		:precondition
		(and
			( ACTIVE_LOCAL_ALERT_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( PREPARED_EVACUATION_PHXFIRE )
		)
	)
	(:action PREPARE_EVACUATION_POLICECHIEF_SCOTTSFIRE
		:parameters ()
		:precondition
		(and
			( ACTIVE_LOCAL_ALERT_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( PREPARED_EVACUATION_SCOTTSFIRE )
		)
	)
	(:action PREPARE_EVACUATION_POLICECHIEF_MESAFIRE
		:parameters ()
		:precondition
		(and
			( ACTIVE_LOCAL_ALERT_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( PREPARED_EVACUATION_MESAFIRE )
		)
	)
	(:action PREPARE_EVACUATION_POLICECHIEF_ADMINFIRE
		:parameters ()
		:precondition
		(and
			( ACTIVE_LOCAL_ALERT_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( PREPARED_EVACUATION_ADMINFIRE )
		)
	)
	(:action PREPARE_EVACUATION_POLICECHIEF_SUBSTATION
		:parameters ()
		:precondition
		(and
			( ACTIVE_LOCAL_ALERT_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( PREPARED_EVACUATION_SUBSTATION )
		)
	)
	(:action PREPARE_EVACUATION_POLICECHIEF_COURTSTATION
		:parameters ()
		:precondition
		(and
			( ACTIVE_LOCAL_ALERT_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( PREPARED_EVACUATION_COURTSTATION )
		)
	)
	(:action PREPARE_EVACUATION_POLICECHIEF_APACHESTATION
		:parameters ()
		:precondition
		(and
			( ACTIVE_LOCAL_ALERT_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( PREPARED_EVACUATION_APACHESTATION )
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_BYENG_BYENG
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_BYENG_BYENG )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_BYENG_BYENG )
			( NOT_NEEDED_DIVERTED_TRAFFIC_BYENG_BYENG )
			(not ( NEEDED_DIVERTED_TRAFFIC_BYENG_BYENG ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_BYENG_RURAL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_BYENG_RURAL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_BYENG_RURAL )
			( NOT_NEEDED_DIVERTED_TRAFFIC_BYENG_RURAL )
			(not ( NEEDED_DIVERTED_TRAFFIC_BYENG_RURAL ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_BYENG_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_BYENG_MARKETPLACE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_BYENG_MARKETPLACE )
			( NOT_NEEDED_DIVERTED_TRAFFIC_BYENG_MARKETPLACE )
			(not ( NEEDED_DIVERTED_TRAFFIC_BYENG_MARKETPLACE ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_BYENG_MILL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_BYENG_MILL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_BYENG_MILL )
			( NOT_NEEDED_DIVERTED_TRAFFIC_BYENG_MILL )
			(not ( NEEDED_DIVERTED_TRAFFIC_BYENG_MILL ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_BYENG_LAKE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_BYENG_LAKE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_BYENG_LAKE )
			( NOT_NEEDED_DIVERTED_TRAFFIC_BYENG_LAKE )
			(not ( NEEDED_DIVERTED_TRAFFIC_BYENG_LAKE ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_RURAL_BYENG
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_RURAL_BYENG )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_RURAL_BYENG )
			( NOT_NEEDED_DIVERTED_TRAFFIC_RURAL_BYENG )
			(not ( NEEDED_DIVERTED_TRAFFIC_RURAL_BYENG ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_RURAL_RURAL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_RURAL_RURAL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_RURAL_RURAL )
			( NOT_NEEDED_DIVERTED_TRAFFIC_RURAL_RURAL )
			(not ( NEEDED_DIVERTED_TRAFFIC_RURAL_RURAL ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_RURAL_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_RURAL_MARKETPLACE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_RURAL_MARKETPLACE )
			( NOT_NEEDED_DIVERTED_TRAFFIC_RURAL_MARKETPLACE )
			(not ( NEEDED_DIVERTED_TRAFFIC_RURAL_MARKETPLACE ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_RURAL_MILL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_RURAL_MILL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_RURAL_MILL )
			( NOT_NEEDED_DIVERTED_TRAFFIC_RURAL_MILL )
			(not ( NEEDED_DIVERTED_TRAFFIC_RURAL_MILL ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_RURAL_LAKE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_RURAL_LAKE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_RURAL_LAKE )
			( NOT_NEEDED_DIVERTED_TRAFFIC_RURAL_LAKE )
			(not ( NEEDED_DIVERTED_TRAFFIC_RURAL_LAKE ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_MARKETPLACE_BYENG
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MARKETPLACE_BYENG )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_MARKETPLACE_BYENG )
			( NOT_NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_BYENG )
			(not ( NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_BYENG ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_MARKETPLACE_RURAL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MARKETPLACE_RURAL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_MARKETPLACE_RURAL )
			( NOT_NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_RURAL )
			(not ( NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_RURAL ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_MARKETPLACE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MARKETPLACE_MARKETPLACE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_MARKETPLACE_MARKETPLACE )
			( NOT_NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_MARKETPLACE )
			(not ( NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_MARKETPLACE ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_MARKETPLACE_MILL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MARKETPLACE_MILL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_MARKETPLACE_MILL )
			( NOT_NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_MILL )
			(not ( NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_MILL ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_MARKETPLACE_LAKE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MARKETPLACE_LAKE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_MARKETPLACE_LAKE )
			( NOT_NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_LAKE )
			(not ( NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_LAKE ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_MILL_BYENG
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MILL_BYENG )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_MILL_BYENG )
			( NOT_NEEDED_DIVERTED_TRAFFIC_MILL_BYENG )
			(not ( NEEDED_DIVERTED_TRAFFIC_MILL_BYENG ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_MILL_RURAL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MILL_RURAL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_MILL_RURAL )
			( NOT_NEEDED_DIVERTED_TRAFFIC_MILL_RURAL )
			(not ( NEEDED_DIVERTED_TRAFFIC_MILL_RURAL ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_MILL_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MILL_MARKETPLACE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_MILL_MARKETPLACE )
			( NOT_NEEDED_DIVERTED_TRAFFIC_MILL_MARKETPLACE )
			(not ( NEEDED_DIVERTED_TRAFFIC_MILL_MARKETPLACE ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_MILL_MILL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MILL_MILL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_MILL_MILL )
			( NOT_NEEDED_DIVERTED_TRAFFIC_MILL_MILL )
			(not ( NEEDED_DIVERTED_TRAFFIC_MILL_MILL ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_MILL_LAKE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_MILL_LAKE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_MILL_LAKE )
			( NOT_NEEDED_DIVERTED_TRAFFIC_MILL_LAKE )
			(not ( NEEDED_DIVERTED_TRAFFIC_MILL_LAKE ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_LAKE_BYENG
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_LAKE_BYENG )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_LAKE_BYENG )
			( NOT_NEEDED_DIVERTED_TRAFFIC_LAKE_BYENG )
			(not ( NEEDED_DIVERTED_TRAFFIC_LAKE_BYENG ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_LAKE_RURAL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_LAKE_RURAL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_LAKE_RURAL )
			( NOT_NEEDED_DIVERTED_TRAFFIC_LAKE_RURAL )
			(not ( NEEDED_DIVERTED_TRAFFIC_LAKE_RURAL ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_LAKE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_LAKE_MARKETPLACE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_LAKE_MARKETPLACE )
			( NOT_NEEDED_DIVERTED_TRAFFIC_LAKE_MARKETPLACE )
			(not ( NEEDED_DIVERTED_TRAFFIC_LAKE_MARKETPLACE ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_LAKE_MILL
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_LAKE_MILL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_LAKE_MILL )
			( NOT_NEEDED_DIVERTED_TRAFFIC_LAKE_MILL )
			(not ( NEEDED_DIVERTED_TRAFFIC_LAKE_MILL ))
		)
	)
	(:action DIVERT_TRAFFIC_TRANSPORTCHIEF_LAKE_LAKE
		:parameters ()
		:precondition
		(and
			( BLOCKED_ROAD_LAKE_LAKE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( TRAFFIC_DIVERTED_LAKE_LAKE )
			( NOT_NEEDED_DIVERTED_TRAFFIC_LAKE_LAKE )
			(not ( NEEDED_DIVERTED_TRAFFIC_LAKE_LAKE ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_BYENG_BYENG
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_BYENG )
			( POSITIONED_POLICEMEN_BYENG )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_BYENG_BYENG )
			( NEEDED_DIVERTED_TRAFFIC_BYENG_BYENG )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_BYENG_BYENG ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_BYENG_RURAL
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_BYENG )
			( POSITIONED_POLICEMEN_BYENG )
			( DEPLOYED_POLICE_CARS_RURAL )
			( POSITIONED_POLICEMEN_RURAL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_BYENG_RURAL )
			( NEEDED_DIVERTED_TRAFFIC_BYENG_RURAL )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_BYENG_RURAL ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_BYENG_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_BYENG )
			( POSITIONED_POLICEMEN_BYENG )
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			( POSITIONED_POLICEMEN_MARKETPLACE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_BYENG_MARKETPLACE )
			( NEEDED_DIVERTED_TRAFFIC_BYENG_MARKETPLACE )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_BYENG_MARKETPLACE ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_BYENG_MILL
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_BYENG )
			( POSITIONED_POLICEMEN_BYENG )
			( DEPLOYED_POLICE_CARS_MILL )
			( POSITIONED_POLICEMEN_MILL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_BYENG_MILL )
			( NEEDED_DIVERTED_TRAFFIC_BYENG_MILL )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_BYENG_MILL ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_BYENG_LAKE
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_BYENG )
			( POSITIONED_POLICEMEN_BYENG )
			( DEPLOYED_POLICE_CARS_LAKE )
			( POSITIONED_POLICEMEN_LAKE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_BYENG_LAKE )
			( NEEDED_DIVERTED_TRAFFIC_BYENG_LAKE )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_BYENG_LAKE ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_RURAL_BYENG
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_RURAL )
			( POSITIONED_POLICEMEN_RURAL )
			( DEPLOYED_POLICE_CARS_BYENG )
			( POSITIONED_POLICEMEN_BYENG )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_RURAL_BYENG )
			( NEEDED_DIVERTED_TRAFFIC_RURAL_BYENG )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_RURAL_BYENG ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_RURAL_RURAL
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_RURAL )
			( POSITIONED_POLICEMEN_RURAL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_RURAL_RURAL )
			( NEEDED_DIVERTED_TRAFFIC_RURAL_RURAL )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_RURAL_RURAL ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_RURAL_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_RURAL )
			( POSITIONED_POLICEMEN_RURAL )
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			( POSITIONED_POLICEMEN_MARKETPLACE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_RURAL_MARKETPLACE )
			( NEEDED_DIVERTED_TRAFFIC_RURAL_MARKETPLACE )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_RURAL_MARKETPLACE ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_RURAL_MILL
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_RURAL )
			( POSITIONED_POLICEMEN_RURAL )
			( DEPLOYED_POLICE_CARS_MILL )
			( POSITIONED_POLICEMEN_MILL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_RURAL_MILL )
			( NEEDED_DIVERTED_TRAFFIC_RURAL_MILL )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_RURAL_MILL ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_RURAL_LAKE
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_RURAL )
			( POSITIONED_POLICEMEN_RURAL )
			( DEPLOYED_POLICE_CARS_LAKE )
			( POSITIONED_POLICEMEN_LAKE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_RURAL_LAKE )
			( NEEDED_DIVERTED_TRAFFIC_RURAL_LAKE )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_RURAL_LAKE ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_MARKETPLACE_BYENG
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			( POSITIONED_POLICEMEN_MARKETPLACE )
			( DEPLOYED_POLICE_CARS_BYENG )
			( POSITIONED_POLICEMEN_BYENG )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_MARKETPLACE_BYENG )
			( NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_BYENG )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_BYENG ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_MARKETPLACE_RURAL
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			( POSITIONED_POLICEMEN_MARKETPLACE )
			( DEPLOYED_POLICE_CARS_RURAL )
			( POSITIONED_POLICEMEN_RURAL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_MARKETPLACE_RURAL )
			( NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_RURAL )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_RURAL ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_MARKETPLACE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			( POSITIONED_POLICEMEN_MARKETPLACE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_MARKETPLACE_MARKETPLACE )
			( NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_MARKETPLACE )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_MARKETPLACE ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_MARKETPLACE_MILL
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			( POSITIONED_POLICEMEN_MARKETPLACE )
			( DEPLOYED_POLICE_CARS_MILL )
			( POSITIONED_POLICEMEN_MILL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_MARKETPLACE_MILL )
			( NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_MILL )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_MILL ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_MARKETPLACE_LAKE
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			( POSITIONED_POLICEMEN_MARKETPLACE )
			( DEPLOYED_POLICE_CARS_LAKE )
			( POSITIONED_POLICEMEN_LAKE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_MARKETPLACE_LAKE )
			( NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_LAKE )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_MARKETPLACE_LAKE ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_MILL_BYENG
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_MILL )
			( POSITIONED_POLICEMEN_MILL )
			( DEPLOYED_POLICE_CARS_BYENG )
			( POSITIONED_POLICEMEN_BYENG )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_MILL_BYENG )
			( NEEDED_DIVERTED_TRAFFIC_MILL_BYENG )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_MILL_BYENG ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_MILL_RURAL
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_MILL )
			( POSITIONED_POLICEMEN_MILL )
			( DEPLOYED_POLICE_CARS_RURAL )
			( POSITIONED_POLICEMEN_RURAL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_MILL_RURAL )
			( NEEDED_DIVERTED_TRAFFIC_MILL_RURAL )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_MILL_RURAL ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_MILL_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_MILL )
			( POSITIONED_POLICEMEN_MILL )
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			( POSITIONED_POLICEMEN_MARKETPLACE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_MILL_MARKETPLACE )
			( NEEDED_DIVERTED_TRAFFIC_MILL_MARKETPLACE )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_MILL_MARKETPLACE ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_MILL_MILL
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_MILL )
			( POSITIONED_POLICEMEN_MILL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_MILL_MILL )
			( NEEDED_DIVERTED_TRAFFIC_MILL_MILL )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_MILL_MILL ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_MILL_LAKE
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_MILL )
			( POSITIONED_POLICEMEN_MILL )
			( DEPLOYED_POLICE_CARS_LAKE )
			( POSITIONED_POLICEMEN_LAKE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_MILL_LAKE )
			( NEEDED_DIVERTED_TRAFFIC_MILL_LAKE )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_MILL_LAKE ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_LAKE_BYENG
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_LAKE )
			( POSITIONED_POLICEMEN_LAKE )
			( DEPLOYED_POLICE_CARS_BYENG )
			( POSITIONED_POLICEMEN_BYENG )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_LAKE_BYENG )
			( NEEDED_DIVERTED_TRAFFIC_LAKE_BYENG )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_LAKE_BYENG ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_LAKE_RURAL
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_LAKE )
			( POSITIONED_POLICEMEN_LAKE )
			( DEPLOYED_POLICE_CARS_RURAL )
			( POSITIONED_POLICEMEN_RURAL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_LAKE_RURAL )
			( NEEDED_DIVERTED_TRAFFIC_LAKE_RURAL )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_LAKE_RURAL ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_LAKE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_LAKE )
			( POSITIONED_POLICEMEN_LAKE )
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			( POSITIONED_POLICEMEN_MARKETPLACE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_LAKE_MARKETPLACE )
			( NEEDED_DIVERTED_TRAFFIC_LAKE_MARKETPLACE )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_LAKE_MARKETPLACE ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_LAKE_MILL
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_LAKE )
			( POSITIONED_POLICEMEN_LAKE )
			( DEPLOYED_POLICE_CARS_MILL )
			( POSITIONED_POLICEMEN_MILL )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_LAKE_MILL )
			( NEEDED_DIVERTED_TRAFFIC_LAKE_MILL )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_LAKE_MILL ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action BLOCK_ROAD_TRANSPORTCHIEF_LAKE_LAKE
		:parameters ()
		:precondition
		(and
			( DEPLOYED_POLICE_CARS_LAKE )
			( POSITIONED_POLICEMEN_LAKE )
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( BLOCKED_ROAD_LAKE_LAKE )
			( NEEDED_DIVERTED_TRAFFIC_LAKE_LAKE )
			( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NOT_NEEDED_DIVERTED_TRAFFIC_LAKE_LAKE ))
			(not ( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action ISSUE_LOCAL_ALERT_TRANSPORTCHIEF
		:parameters ()
		:precondition
		(and
			( MEDIA_CONTACTED_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			( NOT_NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF )
			(not ( NEEDED_ACTIVE_LOCAL_ALERT_TRANSPORTCHIEF ))
		)
	)
	(:action ISSUE_LOCAL_ALERT_MEDICHIEF
		:parameters ()
		:precondition
		(and
			( MEDIA_CONTACTED_MEDICHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ACTIVE_LOCAL_ALERT_MEDICHIEF )
		)
	)
	(:action ISSUE_LOCAL_ALERT_FIRECHIEF
		:parameters ()
		:precondition
		(and
			( MEDIA_CONTACTED_FIRECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ACTIVE_LOCAL_ALERT_FIRECHIEF )
			( NOT_NEEDED_ACTIVE_LOCAL_ALERT_FIRECHIEF )
			(not ( NEEDED_ACTIVE_LOCAL_ALERT_FIRECHIEF ))
		)
	)
	(:action ISSUE_LOCAL_ALERT_POLICECHIEF
		:parameters ()
		:precondition
		(and
			( MEDIA_CONTACTED_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ACTIVE_LOCAL_ALERT_POLICECHIEF )
		)
	)
	(:action SET_UP_HELPLINE_TRANSPORTCHIEF
		:parameters ()
		:precondition
		(and
			( MEDIA_CONTACTED_TRANSPORTCHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ACTIVE_HELPLINE_TRANSPORTCHIEF )
		)
	)
	(:action SET_UP_HELPLINE_MEDICHIEF
		:parameters ()
		:precondition
		(and
			( MEDIA_CONTACTED_MEDICHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ACTIVE_HELPLINE_MEDICHIEF )
		)
	)
	(:action SET_UP_HELPLINE_FIRECHIEF
		:parameters ()
		:precondition
		(and
			( MEDIA_CONTACTED_FIRECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ACTIVE_HELPLINE_FIRECHIEF )
		)
	)
	(:action SET_UP_HELPLINE_POLICECHIEF
		:parameters ()
		:precondition
		(and
			( MEDIA_CONTACTED_POLICECHIEF )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ACTIVE_HELPLINE_POLICECHIEF )
		)
	)
	(:action CONTACT_MEDIA_TRANSPORTCHIEF
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( MEDIA_CONTACTED_TRANSPORTCHIEF )
		)
	)
	(:action CONTACT_MEDIA_MEDICHIEF
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( MEDIA_CONTACTED_MEDICHIEF )
		)
	)
	(:action CONTACT_MEDIA_FIRECHIEF
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( MEDIA_CONTACTED_FIRECHIEF )
		)
	)
	(:action CONTACT_MEDIA_POLICECHIEF
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( MEDIA_CONTACTED_POLICECHIEF )
		)
	)
	(:action POSITION_POLICEMEN_POLICECHIEF_SUBSTATION_BYENG
		:parameters ()
		:precondition
		(and
			( ALERTED_SUBSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( POSITIONED_POLICEMEN_BYENG )
			(not ( ALERTED_SUBSTATION ))
		)
	)
	(:action POSITION_POLICEMEN_POLICECHIEF_SUBSTATION_RURAL
		:parameters ()
		:precondition
		(and
			( ALERTED_SUBSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( POSITIONED_POLICEMEN_RURAL )
			(not ( ALERTED_SUBSTATION ))
		)
	)
	(:action POSITION_POLICEMEN_POLICECHIEF_SUBSTATION_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( ALERTED_SUBSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( POSITIONED_POLICEMEN_MARKETPLACE )
			(not ( ALERTED_SUBSTATION ))
		)
	)
	(:action POSITION_POLICEMEN_POLICECHIEF_SUBSTATION_MILL
		:parameters ()
		:precondition
		(and
			( ALERTED_SUBSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( POSITIONED_POLICEMEN_MILL )
			(not ( ALERTED_SUBSTATION ))
		)
	)
	(:action POSITION_POLICEMEN_POLICECHIEF_SUBSTATION_LAKE
		:parameters ()
		:precondition
		(and
			( ALERTED_SUBSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( POSITIONED_POLICEMEN_LAKE )
			(not ( ALERTED_SUBSTATION ))
		)
	)
	(:action POSITION_POLICEMEN_POLICECHIEF_COURTSTATION_BYENG
		:parameters ()
		:precondition
		(and
			( ALERTED_COURTSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( POSITIONED_POLICEMEN_BYENG )
			(not ( ALERTED_COURTSTATION ))
		)
	)
	(:action POSITION_POLICEMEN_POLICECHIEF_COURTSTATION_RURAL
		:parameters ()
		:precondition
		(and
			( ALERTED_COURTSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( POSITIONED_POLICEMEN_RURAL )
			(not ( ALERTED_COURTSTATION ))
		)
	)
	(:action POSITION_POLICEMEN_POLICECHIEF_COURTSTATION_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( ALERTED_COURTSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( POSITIONED_POLICEMEN_MARKETPLACE )
			(not ( ALERTED_COURTSTATION ))
		)
	)
	(:action POSITION_POLICEMEN_POLICECHIEF_COURTSTATION_MILL
		:parameters ()
		:precondition
		(and
			( ALERTED_COURTSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( POSITIONED_POLICEMEN_MILL )
			(not ( ALERTED_COURTSTATION ))
		)
	)
	(:action POSITION_POLICEMEN_POLICECHIEF_COURTSTATION_LAKE
		:parameters ()
		:precondition
		(and
			( ALERTED_COURTSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( POSITIONED_POLICEMEN_LAKE )
			(not ( ALERTED_COURTSTATION ))
		)
	)
	(:action POSITION_POLICEMEN_POLICECHIEF_APACHESTATION_BYENG
		:parameters ()
		:precondition
		(and
			( ALERTED_APACHESTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( POSITIONED_POLICEMEN_BYENG )
			(not ( ALERTED_APACHESTATION ))
		)
	)
	(:action POSITION_POLICEMEN_POLICECHIEF_APACHESTATION_RURAL
		:parameters ()
		:precondition
		(and
			( ALERTED_APACHESTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( POSITIONED_POLICEMEN_RURAL )
			(not ( ALERTED_APACHESTATION ))
		)
	)
	(:action POSITION_POLICEMEN_POLICECHIEF_APACHESTATION_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( ALERTED_APACHESTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( POSITIONED_POLICEMEN_MARKETPLACE )
			(not ( ALERTED_APACHESTATION ))
		)
	)
	(:action POSITION_POLICEMEN_POLICECHIEF_APACHESTATION_MILL
		:parameters ()
		:precondition
		(and
			( ALERTED_APACHESTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( POSITIONED_POLICEMEN_MILL )
			(not ( ALERTED_APACHESTATION ))
		)
	)
	(:action POSITION_POLICEMEN_POLICECHIEF_APACHESTATION_LAKE
		:parameters ()
		:precondition
		(and
			( ALERTED_APACHESTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( POSITIONED_POLICEMEN_LAKE )
			(not ( ALERTED_APACHESTATION ))
		)
	)
	(:action DEPLOY_AMBULANCES_POLICECHIEF_JOSEPH_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_AMBULANCES_NUMBER_JOSEPH )
			( ALERTED_JOSEPH )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_AMBULANCES_BYENG )
			(not ( ALERTED_JOSEPH ))
			(not ( HAS_AMBULANCES_NUMBER_JOSEPH ))
		)
	)
	(:action DEPLOY_AMBULANCES_POLICECHIEF_JOSEPH_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_AMBULANCES_NUMBER_JOSEPH )
			( ALERTED_JOSEPH )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_AMBULANCES_RURAL )
			(not ( ALERTED_JOSEPH ))
			(not ( HAS_AMBULANCES_NUMBER_JOSEPH ))
		)
	)
	(:action DEPLOY_AMBULANCES_POLICECHIEF_JOSEPH_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_AMBULANCES_NUMBER_JOSEPH )
			( ALERTED_JOSEPH )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_AMBULANCES_MARKETPLACE )
			(not ( ALERTED_JOSEPH ))
			(not ( HAS_AMBULANCES_NUMBER_JOSEPH ))
		)
	)
	(:action DEPLOY_AMBULANCES_POLICECHIEF_JOSEPH_MILL
		:parameters ()
		:precondition
		(and
			( HAS_AMBULANCES_NUMBER_JOSEPH )
			( ALERTED_JOSEPH )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_AMBULANCES_MILL )
			(not ( ALERTED_JOSEPH ))
			(not ( HAS_AMBULANCES_NUMBER_JOSEPH ))
		)
	)
	(:action DEPLOY_AMBULANCES_POLICECHIEF_JOSEPH_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_AMBULANCES_NUMBER_JOSEPH )
			( ALERTED_JOSEPH )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_AMBULANCES_LAKE )
			(not ( ALERTED_JOSEPH ))
			(not ( HAS_AMBULANCES_NUMBER_JOSEPH ))
		)
	)
	(:action DEPLOY_AMBULANCES_POLICECHIEF_LUKES_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_AMBULANCES_NUMBER_LUKES )
			( ALERTED_LUKES )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_AMBULANCES_BYENG )
			(not ( ALERTED_LUKES ))
			(not ( HAS_AMBULANCES_NUMBER_LUKES ))
		)
	)
	(:action DEPLOY_AMBULANCES_POLICECHIEF_LUKES_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_AMBULANCES_NUMBER_LUKES )
			( ALERTED_LUKES )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_AMBULANCES_RURAL )
			(not ( ALERTED_LUKES ))
			(not ( HAS_AMBULANCES_NUMBER_LUKES ))
		)
	)
	(:action DEPLOY_AMBULANCES_POLICECHIEF_LUKES_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_AMBULANCES_NUMBER_LUKES )
			( ALERTED_LUKES )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_AMBULANCES_MARKETPLACE )
			(not ( ALERTED_LUKES ))
			(not ( HAS_AMBULANCES_NUMBER_LUKES ))
		)
	)
	(:action DEPLOY_AMBULANCES_POLICECHIEF_LUKES_MILL
		:parameters ()
		:precondition
		(and
			( HAS_AMBULANCES_NUMBER_LUKES )
			( ALERTED_LUKES )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_AMBULANCES_MILL )
			(not ( ALERTED_LUKES ))
			(not ( HAS_AMBULANCES_NUMBER_LUKES ))
		)
	)
	(:action DEPLOY_AMBULANCES_POLICECHIEF_LUKES_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_AMBULANCES_NUMBER_LUKES )
			( ALERTED_LUKES )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_AMBULANCES_LAKE )
			(not ( ALERTED_LUKES ))
			(not ( HAS_AMBULANCES_NUMBER_LUKES ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_PHXFIRE_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_BYENG )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_RESCUERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_PHXFIRE_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_RURAL )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_RESCUERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_PHXFIRE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_MARKETPLACE )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_RESCUERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_PHXFIRE_MILL
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_MILL )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_RESCUERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_PHXFIRE_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_LAKE )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_RESCUERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_SCOTTSFIRE_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_BYENG )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_RESCUERS_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_SCOTTSFIRE_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_RURAL )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_RESCUERS_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_SCOTTSFIRE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_MARKETPLACE )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_RESCUERS_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_SCOTTSFIRE_MILL
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_MILL )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_RESCUERS_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_SCOTTSFIRE_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_LAKE )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_RESCUERS_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_MESAFIRE_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_MESAFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_BYENG )
			(not ( ALERTED_MESAFIRE ))
			(not ( HAS_RESCUERS_NUMBER_MESAFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_MESAFIRE_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_MESAFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_RURAL )
			(not ( ALERTED_MESAFIRE ))
			(not ( HAS_RESCUERS_NUMBER_MESAFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_MESAFIRE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_MESAFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_MARKETPLACE )
			(not ( ALERTED_MESAFIRE ))
			(not ( HAS_RESCUERS_NUMBER_MESAFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_MESAFIRE_MILL
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_MESAFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_MILL )
			(not ( ALERTED_MESAFIRE ))
			(not ( HAS_RESCUERS_NUMBER_MESAFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_MESAFIRE_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_MESAFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_LAKE )
			(not ( ALERTED_MESAFIRE ))
			(not ( HAS_RESCUERS_NUMBER_MESAFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_ADMINFIRE_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_BYENG )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_RESCUERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_ADMINFIRE_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_RURAL )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_RESCUERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_ADMINFIRE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_MARKETPLACE )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_RESCUERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_ADMINFIRE_MILL
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_MILL )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_RESCUERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_RESCUERS_FIRECHIEF_ADMINFIRE_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_RESCUERS_NUMBER_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_RESCUERS_LAKE )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_RESCUERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_HELICOPTERS_FIRECHIEF_PHXFIRE_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_HELICOPTERS_NUMBER_PHXFIRE )
			( ALERTED_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_HELICOPTERS_BYENG )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_HELICOPTERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_HELICOPTERS_FIRECHIEF_PHXFIRE_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_HELICOPTERS_NUMBER_PHXFIRE )
			( ALERTED_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_HELICOPTERS_RURAL )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_HELICOPTERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_HELICOPTERS_FIRECHIEF_PHXFIRE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_HELICOPTERS_NUMBER_PHXFIRE )
			( ALERTED_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_HELICOPTERS_MARKETPLACE )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_HELICOPTERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_HELICOPTERS_FIRECHIEF_PHXFIRE_MILL
		:parameters ()
		:precondition
		(and
			( HAS_HELICOPTERS_NUMBER_PHXFIRE )
			( ALERTED_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_HELICOPTERS_MILL )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_HELICOPTERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_HELICOPTERS_FIRECHIEF_PHXFIRE_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_HELICOPTERS_NUMBER_PHXFIRE )
			( ALERTED_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_HELICOPTERS_LAKE )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_HELICOPTERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_HELICOPTERS_FIRECHIEF_ADMINFIRE_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_HELICOPTERS_NUMBER_ADMINFIRE )
			( ALERTED_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_HELICOPTERS_BYENG )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_HELICOPTERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_HELICOPTERS_FIRECHIEF_ADMINFIRE_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_HELICOPTERS_NUMBER_ADMINFIRE )
			( ALERTED_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_HELICOPTERS_RURAL )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_HELICOPTERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_HELICOPTERS_FIRECHIEF_ADMINFIRE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_HELICOPTERS_NUMBER_ADMINFIRE )
			( ALERTED_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_HELICOPTERS_MARKETPLACE )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_HELICOPTERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_HELICOPTERS_FIRECHIEF_ADMINFIRE_MILL
		:parameters ()
		:precondition
		(and
			( HAS_HELICOPTERS_NUMBER_ADMINFIRE )
			( ALERTED_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_HELICOPTERS_MILL )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_HELICOPTERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_HELICOPTERS_FIRECHIEF_ADMINFIRE_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_HELICOPTERS_NUMBER_ADMINFIRE )
			( ALERTED_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_HELICOPTERS_LAKE )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_HELICOPTERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_BULLDOZERS_FIRECHIEF_PHXFIRE_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_BULLDOZERS_NUMBER_PHXFIRE )
			( ALERTED_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_BULLDOZERS_BYENG )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_BULLDOZERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_BULLDOZERS_FIRECHIEF_PHXFIRE_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_BULLDOZERS_NUMBER_PHXFIRE )
			( ALERTED_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_BULLDOZERS_RURAL )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_BULLDOZERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_BULLDOZERS_FIRECHIEF_PHXFIRE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_BULLDOZERS_NUMBER_PHXFIRE )
			( ALERTED_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_BULLDOZERS_MARKETPLACE )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_BULLDOZERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_BULLDOZERS_FIRECHIEF_PHXFIRE_MILL
		:parameters ()
		:precondition
		(and
			( HAS_BULLDOZERS_NUMBER_PHXFIRE )
			( ALERTED_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_BULLDOZERS_MILL )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_BULLDOZERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_BULLDOZERS_FIRECHIEF_PHXFIRE_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_BULLDOZERS_NUMBER_PHXFIRE )
			( ALERTED_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_BULLDOZERS_LAKE )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_BULLDOZERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_BULLDOZERS_FIRECHIEF_SCOTTSFIRE_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_BULLDOZERS_NUMBER_SCOTTSFIRE )
			( ALERTED_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_BULLDOZERS_BYENG )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_BULLDOZERS_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_BULLDOZERS_FIRECHIEF_SCOTTSFIRE_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_BULLDOZERS_NUMBER_SCOTTSFIRE )
			( ALERTED_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_BULLDOZERS_RURAL )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_BULLDOZERS_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_BULLDOZERS_FIRECHIEF_SCOTTSFIRE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_BULLDOZERS_NUMBER_SCOTTSFIRE )
			( ALERTED_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_BULLDOZERS_MARKETPLACE )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_BULLDOZERS_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_BULLDOZERS_FIRECHIEF_SCOTTSFIRE_MILL
		:parameters ()
		:precondition
		(and
			( HAS_BULLDOZERS_NUMBER_SCOTTSFIRE )
			( ALERTED_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_BULLDOZERS_MILL )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_BULLDOZERS_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_BULLDOZERS_FIRECHIEF_SCOTTSFIRE_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_BULLDOZERS_NUMBER_SCOTTSFIRE )
			( ALERTED_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_BULLDOZERS_LAKE )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_BULLDOZERS_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_BULLDOZERS_FIRECHIEF_ADMINFIRE_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_BULLDOZERS_NUMBER_ADMINFIRE )
			( ALERTED_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_BULLDOZERS_BYENG )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_BULLDOZERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_BULLDOZERS_FIRECHIEF_ADMINFIRE_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_BULLDOZERS_NUMBER_ADMINFIRE )
			( ALERTED_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_BULLDOZERS_RURAL )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_BULLDOZERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_BULLDOZERS_FIRECHIEF_ADMINFIRE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_BULLDOZERS_NUMBER_ADMINFIRE )
			( ALERTED_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_BULLDOZERS_MARKETPLACE )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_BULLDOZERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_BULLDOZERS_FIRECHIEF_ADMINFIRE_MILL
		:parameters ()
		:precondition
		(and
			( HAS_BULLDOZERS_NUMBER_ADMINFIRE )
			( ALERTED_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_BULLDOZERS_MILL )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_BULLDOZERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_BULLDOZERS_FIRECHIEF_ADMINFIRE_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_BULLDOZERS_NUMBER_ADMINFIRE )
			( ALERTED_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_BULLDOZERS_LAKE )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_BULLDOZERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_PHXFIRE_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_PHXFIRE )
			( DEPLOYED_BIG_ENGINES_BYENG )
			( ALERTED_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_BYENG )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_LADDERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_PHXFIRE_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_PHXFIRE )
			( DEPLOYED_BIG_ENGINES_RURAL )
			( ALERTED_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_RURAL )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_LADDERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_PHXFIRE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_PHXFIRE )
			( DEPLOYED_BIG_ENGINES_MARKETPLACE )
			( ALERTED_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_MARKETPLACE )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_LADDERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_PHXFIRE_MILL
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_PHXFIRE )
			( DEPLOYED_BIG_ENGINES_MILL )
			( ALERTED_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_MILL )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_LADDERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_PHXFIRE_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_PHXFIRE )
			( DEPLOYED_BIG_ENGINES_LAKE )
			( ALERTED_PHXFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_LAKE )
			(not ( ALERTED_PHXFIRE ))
			(not ( HAS_LADDERS_NUMBER_PHXFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_SCOTTSFIRE_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_SCOTTSFIRE )
			( DEPLOYED_BIG_ENGINES_BYENG )
			( ALERTED_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_BYENG )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_LADDERS_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_SCOTTSFIRE_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_SCOTTSFIRE )
			( DEPLOYED_BIG_ENGINES_RURAL )
			( ALERTED_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_RURAL )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_LADDERS_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_SCOTTSFIRE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_SCOTTSFIRE )
			( DEPLOYED_BIG_ENGINES_MARKETPLACE )
			( ALERTED_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_MARKETPLACE )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_LADDERS_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_SCOTTSFIRE_MILL
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_SCOTTSFIRE )
			( DEPLOYED_BIG_ENGINES_MILL )
			( ALERTED_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_MILL )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_LADDERS_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_SCOTTSFIRE_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_SCOTTSFIRE )
			( DEPLOYED_BIG_ENGINES_LAKE )
			( ALERTED_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_LAKE )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_LADDERS_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_MESAFIRE_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_MESAFIRE )
			( DEPLOYED_BIG_ENGINES_BYENG )
			( ALERTED_MESAFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_BYENG )
			(not ( ALERTED_MESAFIRE ))
			(not ( HAS_LADDERS_NUMBER_MESAFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_MESAFIRE_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_MESAFIRE )
			( DEPLOYED_BIG_ENGINES_RURAL )
			( ALERTED_MESAFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_RURAL )
			(not ( ALERTED_MESAFIRE ))
			(not ( HAS_LADDERS_NUMBER_MESAFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_MESAFIRE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_MESAFIRE )
			( DEPLOYED_BIG_ENGINES_MARKETPLACE )
			( ALERTED_MESAFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_MARKETPLACE )
			(not ( ALERTED_MESAFIRE ))
			(not ( HAS_LADDERS_NUMBER_MESAFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_MESAFIRE_MILL
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_MESAFIRE )
			( DEPLOYED_BIG_ENGINES_MILL )
			( ALERTED_MESAFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_MILL )
			(not ( ALERTED_MESAFIRE ))
			(not ( HAS_LADDERS_NUMBER_MESAFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_MESAFIRE_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_MESAFIRE )
			( DEPLOYED_BIG_ENGINES_LAKE )
			( ALERTED_MESAFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_LAKE )
			(not ( ALERTED_MESAFIRE ))
			(not ( HAS_LADDERS_NUMBER_MESAFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_ADMINFIRE_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_ADMINFIRE )
			( DEPLOYED_BIG_ENGINES_BYENG )
			( ALERTED_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_BYENG )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_LADDERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_ADMINFIRE_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_ADMINFIRE )
			( DEPLOYED_BIG_ENGINES_RURAL )
			( ALERTED_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_RURAL )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_LADDERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_ADMINFIRE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_ADMINFIRE )
			( DEPLOYED_BIG_ENGINES_MARKETPLACE )
			( ALERTED_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_MARKETPLACE )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_LADDERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_ADMINFIRE_MILL
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_ADMINFIRE )
			( DEPLOYED_BIG_ENGINES_MILL )
			( ALERTED_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_MILL )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_LADDERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_LADDERS_FIRECHIEF_ADMINFIRE_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_LADDERS_NUMBER_ADMINFIRE )
			( DEPLOYED_BIG_ENGINES_LAKE )
			( ALERTED_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 3)
			( DEPLOYED_LADDERS_LAKE )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_LADDERS_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_BIG_ENGINES_FIRECHIEF_MESAFIRE_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_BIG_ENGINES_NUMBER_MESAFIRE )
		)
		:effect
		(and
			(increase (total-cost) 4)
			( DEPLOYED_ENGINES_BYENG )
			( DEPLOYED_BIG_ENGINES_BYENG )
			(not ( ALERTED_MESAFIRE ))
			(not ( HAS_BIG_ENGINES_NUMBER_MESAFIRE ))
		)
	)
	(:action DEPLOY_BIG_ENGINES_FIRECHIEF_MESAFIRE_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_BIG_ENGINES_NUMBER_MESAFIRE )
		)
		:effect
		(and
			(increase (total-cost) 4)
			( DEPLOYED_ENGINES_RURAL )
			( DEPLOYED_BIG_ENGINES_RURAL )
			(not ( ALERTED_MESAFIRE ))
			(not ( HAS_BIG_ENGINES_NUMBER_MESAFIRE ))
		)
	)
	(:action DEPLOY_BIG_ENGINES_FIRECHIEF_MESAFIRE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_BIG_ENGINES_NUMBER_MESAFIRE )
		)
		:effect
		(and
			(increase (total-cost) 4)
			( DEPLOYED_ENGINES_MARKETPLACE )
			( DEPLOYED_BIG_ENGINES_MARKETPLACE )
			(not ( ALERTED_MESAFIRE ))
			(not ( HAS_BIG_ENGINES_NUMBER_MESAFIRE ))
		)
	)
	(:action DEPLOY_BIG_ENGINES_FIRECHIEF_MESAFIRE_MILL
		:parameters ()
		:precondition
		(and
			( HAS_BIG_ENGINES_NUMBER_MESAFIRE )
		)
		:effect
		(and
			(increase (total-cost) 4)
			( DEPLOYED_ENGINES_MILL )
			( DEPLOYED_BIG_ENGINES_MILL )
			(not ( ALERTED_MESAFIRE ))
			(not ( HAS_BIG_ENGINES_NUMBER_MESAFIRE ))
		)
	)
	(:action DEPLOY_BIG_ENGINES_FIRECHIEF_MESAFIRE_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_BIG_ENGINES_NUMBER_MESAFIRE )
		)
		:effect
		(and
			(increase (total-cost) 4)
			( DEPLOYED_ENGINES_LAKE )
			( DEPLOYED_BIG_ENGINES_LAKE )
			(not ( ALERTED_MESAFIRE ))
			(not ( HAS_BIG_ENGINES_NUMBER_MESAFIRE ))
		)
	)
	(:action DEPLOY_SMALL_ENGINES_FIRECHIEF_SCOTTSFIRE_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_SMALL_ENGINES_NUMBER_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_ENGINES_BYENG )
			( DEPLOYED_SMALL_ENGINES_BYENG )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_SMALL_ENGINES_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_SMALL_ENGINES_FIRECHIEF_SCOTTSFIRE_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_SMALL_ENGINES_NUMBER_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_ENGINES_RURAL )
			( DEPLOYED_SMALL_ENGINES_RURAL )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_SMALL_ENGINES_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_SMALL_ENGINES_FIRECHIEF_SCOTTSFIRE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_SMALL_ENGINES_NUMBER_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_ENGINES_MARKETPLACE )
			( DEPLOYED_SMALL_ENGINES_MARKETPLACE )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_SMALL_ENGINES_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_SMALL_ENGINES_FIRECHIEF_SCOTTSFIRE_MILL
		:parameters ()
		:precondition
		(and
			( HAS_SMALL_ENGINES_NUMBER_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_ENGINES_MILL )
			( DEPLOYED_SMALL_ENGINES_MILL )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_SMALL_ENGINES_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_SMALL_ENGINES_FIRECHIEF_SCOTTSFIRE_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_SMALL_ENGINES_NUMBER_SCOTTSFIRE )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_ENGINES_LAKE )
			( DEPLOYED_SMALL_ENGINES_LAKE )
			(not ( ALERTED_SCOTTSFIRE ))
			(not ( HAS_SMALL_ENGINES_NUMBER_SCOTTSFIRE ))
		)
	)
	(:action DEPLOY_SMALL_ENGINES_FIRECHIEF_ADMINFIRE_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_SMALL_ENGINES_NUMBER_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_ENGINES_BYENG )
			( DEPLOYED_SMALL_ENGINES_BYENG )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_SMALL_ENGINES_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_SMALL_ENGINES_FIRECHIEF_ADMINFIRE_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_SMALL_ENGINES_NUMBER_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_ENGINES_RURAL )
			( DEPLOYED_SMALL_ENGINES_RURAL )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_SMALL_ENGINES_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_SMALL_ENGINES_FIRECHIEF_ADMINFIRE_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_SMALL_ENGINES_NUMBER_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_ENGINES_MARKETPLACE )
			( DEPLOYED_SMALL_ENGINES_MARKETPLACE )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_SMALL_ENGINES_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_SMALL_ENGINES_FIRECHIEF_ADMINFIRE_MILL
		:parameters ()
		:precondition
		(and
			( HAS_SMALL_ENGINES_NUMBER_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_ENGINES_MILL )
			( DEPLOYED_SMALL_ENGINES_MILL )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_SMALL_ENGINES_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_SMALL_ENGINES_FIRECHIEF_ADMINFIRE_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_SMALL_ENGINES_NUMBER_ADMINFIRE )
		)
		:effect
		(and
			(increase (total-cost) 2)
			( DEPLOYED_ENGINES_LAKE )
			( DEPLOYED_SMALL_ENGINES_LAKE )
			(not ( ALERTED_ADMINFIRE ))
			(not ( HAS_SMALL_ENGINES_NUMBER_ADMINFIRE ))
		)
	)
	(:action DEPLOY_POLICE_CARS_POLICECHIEF_SUBSTATION_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_POLICE_CAR_NUMBER_SUBSTATION )
			( ALERTED_SUBSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( DEPLOYED_POLICE_CARS_BYENG )
			(not ( ALERTED_SUBSTATION ))
			(not ( HAS_POLICE_CAR_NUMBER_SUBSTATION ))
		)
	)
	(:action DEPLOY_POLICE_CARS_POLICECHIEF_SUBSTATION_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_POLICE_CAR_NUMBER_SUBSTATION )
			( ALERTED_SUBSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( DEPLOYED_POLICE_CARS_RURAL )
			(not ( ALERTED_SUBSTATION ))
			(not ( HAS_POLICE_CAR_NUMBER_SUBSTATION ))
		)
	)
	(:action DEPLOY_POLICE_CARS_POLICECHIEF_SUBSTATION_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_POLICE_CAR_NUMBER_SUBSTATION )
			( ALERTED_SUBSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			(not ( ALERTED_SUBSTATION ))
			(not ( HAS_POLICE_CAR_NUMBER_SUBSTATION ))
		)
	)
	(:action DEPLOY_POLICE_CARS_POLICECHIEF_SUBSTATION_MILL
		:parameters ()
		:precondition
		(and
			( HAS_POLICE_CAR_NUMBER_SUBSTATION )
			( ALERTED_SUBSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( DEPLOYED_POLICE_CARS_MILL )
			(not ( ALERTED_SUBSTATION ))
			(not ( HAS_POLICE_CAR_NUMBER_SUBSTATION ))
		)
	)
	(:action DEPLOY_POLICE_CARS_POLICECHIEF_SUBSTATION_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_POLICE_CAR_NUMBER_SUBSTATION )
			( ALERTED_SUBSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( DEPLOYED_POLICE_CARS_LAKE )
			(not ( ALERTED_SUBSTATION ))
			(not ( HAS_POLICE_CAR_NUMBER_SUBSTATION ))
		)
	)
	(:action DEPLOY_POLICE_CARS_POLICECHIEF_COURTSTATION_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_POLICE_CAR_NUMBER_COURTSTATION )
			( ALERTED_COURTSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( DEPLOYED_POLICE_CARS_BYENG )
			(not ( ALERTED_COURTSTATION ))
			(not ( HAS_POLICE_CAR_NUMBER_COURTSTATION ))
		)
	)
	(:action DEPLOY_POLICE_CARS_POLICECHIEF_COURTSTATION_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_POLICE_CAR_NUMBER_COURTSTATION )
			( ALERTED_COURTSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( DEPLOYED_POLICE_CARS_RURAL )
			(not ( ALERTED_COURTSTATION ))
			(not ( HAS_POLICE_CAR_NUMBER_COURTSTATION ))
		)
	)
	(:action DEPLOY_POLICE_CARS_POLICECHIEF_COURTSTATION_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_POLICE_CAR_NUMBER_COURTSTATION )
			( ALERTED_COURTSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			(not ( ALERTED_COURTSTATION ))
			(not ( HAS_POLICE_CAR_NUMBER_COURTSTATION ))
		)
	)
	(:action DEPLOY_POLICE_CARS_POLICECHIEF_COURTSTATION_MILL
		:parameters ()
		:precondition
		(and
			( HAS_POLICE_CAR_NUMBER_COURTSTATION )
			( ALERTED_COURTSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( DEPLOYED_POLICE_CARS_MILL )
			(not ( ALERTED_COURTSTATION ))
			(not ( HAS_POLICE_CAR_NUMBER_COURTSTATION ))
		)
	)
	(:action DEPLOY_POLICE_CARS_POLICECHIEF_COURTSTATION_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_POLICE_CAR_NUMBER_COURTSTATION )
			( ALERTED_COURTSTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( DEPLOYED_POLICE_CARS_LAKE )
			(not ( ALERTED_COURTSTATION ))
			(not ( HAS_POLICE_CAR_NUMBER_COURTSTATION ))
		)
	)
	(:action DEPLOY_POLICE_CARS_POLICECHIEF_APACHESTATION_BYENG
		:parameters ()
		:precondition
		(and
			( HAS_POLICE_CAR_NUMBER_APACHESTATION )
			( ALERTED_APACHESTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( DEPLOYED_POLICE_CARS_BYENG )
			(not ( ALERTED_APACHESTATION ))
			(not ( HAS_POLICE_CAR_NUMBER_APACHESTATION ))
		)
	)
	(:action DEPLOY_POLICE_CARS_POLICECHIEF_APACHESTATION_RURAL
		:parameters ()
		:precondition
		(and
			( HAS_POLICE_CAR_NUMBER_APACHESTATION )
			( ALERTED_APACHESTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( DEPLOYED_POLICE_CARS_RURAL )
			(not ( ALERTED_APACHESTATION ))
			(not ( HAS_POLICE_CAR_NUMBER_APACHESTATION ))
		)
	)
	(:action DEPLOY_POLICE_CARS_POLICECHIEF_APACHESTATION_MARKETPLACE
		:parameters ()
		:precondition
		(and
			( HAS_POLICE_CAR_NUMBER_APACHESTATION )
			( ALERTED_APACHESTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( DEPLOYED_POLICE_CARS_MARKETPLACE )
			(not ( ALERTED_APACHESTATION ))
			(not ( HAS_POLICE_CAR_NUMBER_APACHESTATION ))
		)
	)
	(:action DEPLOY_POLICE_CARS_POLICECHIEF_APACHESTATION_MILL
		:parameters ()
		:precondition
		(and
			( HAS_POLICE_CAR_NUMBER_APACHESTATION )
			( ALERTED_APACHESTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( DEPLOYED_POLICE_CARS_MILL )
			(not ( ALERTED_APACHESTATION ))
			(not ( HAS_POLICE_CAR_NUMBER_APACHESTATION ))
		)
	)
	(:action DEPLOY_POLICE_CARS_POLICECHIEF_APACHESTATION_LAKE
		:parameters ()
		:precondition
		(and
			( HAS_POLICE_CAR_NUMBER_APACHESTATION )
			( ALERTED_APACHESTATION )
		)
		:effect
		(and
			(increase (total-cost) 1)
			( DEPLOYED_POLICE_CARS_LAKE )
			(not ( ALERTED_APACHESTATION ))
			(not ( HAS_POLICE_CAR_NUMBER_APACHESTATION ))
		)
	)
	(:action UPDATE_TRANSPORTCHIEF
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( UPDATED_TRANSPORTCHIEF )
		)
	)
	(:action UPDATE_MEDICHIEF
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( UPDATED_MEDICHIEF )
		)
	)
	(:action UPDATE_FIRECHIEF
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( UPDATED_FIRECHIEF )
		)
	)
	(:action UPDATE_POLICECHIEF
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( UPDATED_POLICECHIEF )
		)
	)
	(:action ALERT_TRANSPORTCHIEF_BYENG
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_BYENG )
		)
	)
	(:action ALERT_TRANSPORTCHIEF_RURAL
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_RURAL )
		)
	)
	(:action ALERT_TRANSPORTCHIEF_MARKETPLACE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_MARKETPLACE )
		)
	)
	(:action ALERT_TRANSPORTCHIEF_MILL
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_MILL )
		)
	)
	(:action ALERT_TRANSPORTCHIEF_LAKE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_LAKE )
		)
	)
	(:action ALERT_TRANSPORTCHIEF_JOSEPH
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_JOSEPH )
		)
	)
	(:action ALERT_TRANSPORTCHIEF_LUKES
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_LUKES )
		)
	)
	(:action ALERT_TRANSPORTCHIEF_PHXFIRE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_PHXFIRE )
		)
	)
	(:action ALERT_TRANSPORTCHIEF_SCOTTSFIRE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_SCOTTSFIRE )
		)
	)
	(:action ALERT_TRANSPORTCHIEF_MESAFIRE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_MESAFIRE )
		)
	)
	(:action ALERT_TRANSPORTCHIEF_ADMINFIRE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_ADMINFIRE )
		)
	)
	(:action ALERT_TRANSPORTCHIEF_SUBSTATION
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_SUBSTATION )
		)
	)
	(:action ALERT_TRANSPORTCHIEF_COURTSTATION
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_COURTSTATION )
		)
	)
	(:action ALERT_TRANSPORTCHIEF_APACHESTATION
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_APACHESTATION )
		)
	)
	(:action ALERT_MEDICHIEF_BYENG
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_BYENG )
		)
	)
	(:action ALERT_MEDICHIEF_RURAL
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_RURAL )
		)
	)
	(:action ALERT_MEDICHIEF_MARKETPLACE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_MARKETPLACE )
		)
	)
	(:action ALERT_MEDICHIEF_MILL
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_MILL )
		)
	)
	(:action ALERT_MEDICHIEF_LAKE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_LAKE )
		)
	)
	(:action ALERT_MEDICHIEF_JOSEPH
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_JOSEPH )
		)
	)
	(:action ALERT_MEDICHIEF_LUKES
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_LUKES )
		)
	)
	(:action ALERT_MEDICHIEF_PHXFIRE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_PHXFIRE )
		)
	)
	(:action ALERT_MEDICHIEF_SCOTTSFIRE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_SCOTTSFIRE )
		)
	)
	(:action ALERT_MEDICHIEF_MESAFIRE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_MESAFIRE )
		)
	)
	(:action ALERT_MEDICHIEF_ADMINFIRE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_ADMINFIRE )
		)
	)
	(:action ALERT_MEDICHIEF_SUBSTATION
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_SUBSTATION )
		)
	)
	(:action ALERT_MEDICHIEF_COURTSTATION
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_COURTSTATION )
		)
	)
	(:action ALERT_MEDICHIEF_APACHESTATION
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_APACHESTATION )
		)
	)
	(:action ALERT_FIRECHIEF_BYENG
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_BYENG )
		)
	)
	(:action ALERT_FIRECHIEF_RURAL
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_RURAL )
		)
	)
	(:action ALERT_FIRECHIEF_MARKETPLACE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_MARKETPLACE )
		)
	)
	(:action ALERT_FIRECHIEF_MILL
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_MILL )
		)
	)
	(:action ALERT_FIRECHIEF_LAKE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_LAKE )
		)
	)
	(:action ALERT_FIRECHIEF_JOSEPH
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_JOSEPH )
		)
	)
	(:action ALERT_FIRECHIEF_LUKES
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_LUKES )
		)
	)
	(:action ALERT_FIRECHIEF_PHXFIRE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_PHXFIRE )
		)
	)
	(:action ALERT_FIRECHIEF_SCOTTSFIRE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_SCOTTSFIRE )
		)
	)
	(:action ALERT_FIRECHIEF_MESAFIRE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_MESAFIRE )
		)
	)
	(:action ALERT_FIRECHIEF_ADMINFIRE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_ADMINFIRE )
		)
	)
	(:action ALERT_FIRECHIEF_SUBSTATION
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_SUBSTATION )
		)
	)
	(:action ALERT_FIRECHIEF_COURTSTATION
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_COURTSTATION )
		)
	)
	(:action ALERT_FIRECHIEF_APACHESTATION
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_APACHESTATION )
		)
	)
	(:action ALERT_POLICECHIEF_BYENG
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_BYENG )
		)
	)
	(:action ALERT_POLICECHIEF_RURAL
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_RURAL )
		)
	)
	(:action ALERT_POLICECHIEF_MARKETPLACE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_MARKETPLACE )
		)
	)
	(:action ALERT_POLICECHIEF_MILL
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_MILL )
		)
	)
	(:action ALERT_POLICECHIEF_LAKE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_LAKE )
		)
	)
	(:action ALERT_POLICECHIEF_JOSEPH
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_JOSEPH )
		)
	)
	(:action ALERT_POLICECHIEF_LUKES
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_LUKES )
		)
	)
	(:action ALERT_POLICECHIEF_PHXFIRE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_PHXFIRE )
		)
	)
	(:action ALERT_POLICECHIEF_SCOTTSFIRE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_SCOTTSFIRE )
		)
	)
	(:action ALERT_POLICECHIEF_MESAFIRE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_MESAFIRE )
		)
	)
	(:action ALERT_POLICECHIEF_ADMINFIRE
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_ADMINFIRE )
		)
	)
	(:action ALERT_POLICECHIEF_SUBSTATION
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_SUBSTATION )
		)
	)
	(:action ALERT_POLICECHIEF_COURTSTATION
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_COURTSTATION )
		)
	)
	(:action ALERT_POLICECHIEF_APACHESTATION
		:parameters ()
		:precondition
		(and
		)
		:effect
		(and
			(increase (total-cost) 1)
			( ALERTED_APACHESTATION )
		)
	)

)
